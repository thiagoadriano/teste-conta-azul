{"version":3,"sources":["../../maps/src/ts/bootstrap/bootstrap.app.ts","../../maps/src/ts/bootstrap/router.bootstrap.ts","../../maps/src/ts/controller/veiculos.controller.ts","../../maps/src/ts/model/veiculos.model.ts","../../maps/src/ts/service/marcas.modelos.service.ts","../../maps/src/ts/service/veiculos.service.ts"],"names":["APPCA","appRun","$inject","angular","module","run","Router","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","config","VeiculosController","VS","NgTableParams","MS","VeiculosModel","vm","this","lista","listaMarcas","listaModelos","titleModal","Model","tableView","initialParams","count","initialSettings","counts","paginationMaxBlocks","paginationMinBlocks","dataset","tableParams","selecionaModelos","marca","getModelos","abrirModal","$","modal","getAll","then","veiculos","settings","getMarcas","result","on","get","reset","factory","model","combustivel","imagem","modelo","placa","valor","MarcasService","$http","$q","def","defer","res","fromJson","data","Marcas","Modelos","resolve","promise","service","VeiculosService","length","Veiculos","getOne","index","save","obj","push","del","splice"],"mappings":"AAAA,IAAUA,OAAV,SAAUA,GAEN,SAAAC,KADAA,EAAOC,WAKPC,QACKC,OAAO,gBAAiB,UAAW,YACnCC,IAAIJ,GARb,CAAUD,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAGN,SAAAM,EAAgBC,GACZA,EACKC,KAAK,aACFC,YAAa,sBACbC,WAAY,qBACZC,aAAc,OAEjBC,WACGC,WAAY,cATxBP,EAAOJ,SAAW,kBAalBC,QACKC,OAAO,gBACPU,OAAOR,GAjBhB,CAAUN,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAEN,SAAAe,EAA4BC,EAAIC,EAAeC,EAAIC,GAC/C,IAAIC,EAAKC,KACTD,EAAGE,SACHF,EAAGG,eACHH,EAAGI,gBACHJ,EAAGK,WAAa,UAChBL,EAAGM,MAAQP,EAAcO,MACzBN,EAAGO,UAMH,WACI,IAAIb,GACAc,eACIC,MAAO,GAEXC,iBACIC,UACAC,oBAAqB,GACrBC,oBAAqB,EACrBC,QAASd,EAAGE,QAGpB,OAAO,IAAIL,EAAcH,EAAOc,cAAed,EAAOgB,iBAlB3CK,GACff,EAAGgB,iBAyBH,WACIhB,EAAGI,gBACCJ,EAAGM,MAAMW,QACTjB,EAAGI,aAAeN,EAAGoB,WAAWlB,EAAGM,MAAMW,SA3BjDjB,EAAGmB,WAmBH,WACInB,EAAGK,WAAa,UAChBe,EAAE,kBAAkBC,MAAM,SAY1BzB,EAAG0B,SAASC,KAAK,SAACC,GACdxB,EAAGE,MAAQsB,EACXxB,EAAGO,UAAUkB,UACTX,QAASd,EAAGE,UAIpBJ,EAAG4B,YAAYH,KAAK,SAACI,GACjB3B,EAAGG,YAAcwB,IAGrBP,EAAE,kBAAkBQ,GAAG,gBAAiB,WACpC5B,EAAGI,gBACHJ,EAAGM,MAAQP,EAAcO,MACzBc,EAAE,aAAaS,IAAI,GAAGC,UAzDlCnC,EAAmBb,SAAW,kBAAmB,gBAAiB,gBAAiB,iBA+DnFC,QACKC,OAAO,gBACPM,WAAW,qBAAsBK,GAlE1C,CAAUf,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAgBNG,QACKC,OAAO,gBACP+C,QAAQ,gBAjBb,WAUI,OACIC,OATAC,YAAa,GACbC,OAAQ,GACRjB,MAAO,GACPkB,OAAQ,GACRC,MAAO,GACPC,MAAO,MARnB,CAAUzD,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAEN,SAAA0D,EAAuBC,EAAOC,GAC1B,IAAIrC,KACAC,KACAqC,EAAMD,EAAGE,QAUb,OARAH,EAAMV,IAAI,6BAA6BN,KAAK,SAACI,GACzC,IAAIgB,EAAM5D,QAAQ6D,SAASjB,EAAOkB,MAClC1C,EAAcwC,EAAIG,OAClB1C,EAAeuC,EAAII,QACnBN,EAAIO,QAAQ7C,MAKZuB,UAIJ,WACI,OAAOe,EAAIQ,SAJX/B,WAOJ,SAAqBiB,GACjB,OAAO/B,EAAa+B,KAxB5BG,EAAcxD,SAAW,QAAS,MA6BlCC,QACKC,OAAO,gBACPkE,QAAQ,gBAAiBZ,GAhClC,CAAU1D,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAEN,SAAAuE,EAAyBZ,EAAOC,GAC5B,IAAItC,KACJ,OACIoB,OAMJ,WACI,IAAImB,EAAMD,EAAGE,QASb,OARKxC,EAAMkD,OAMPX,EAAIO,QAAQ9C,GALZqC,EAAMV,IAAI,8BAA8BN,KAAK,SAACI,GAC1CzB,EAAQnB,QAAQ6D,SAASjB,EAAOkB,KAAKQ,UACrCZ,EAAIO,QAAQ9C,KAKbuC,EAAIQ,SAfXK,OAkBJ,SAAiBC,GACb,OAAOrD,EAAMqD,IAlBbC,KAqBJ,SAAeC,GACXvD,EAAMwD,KAAKD,IArBXE,IAwBJ,SAAiBJ,GACbrD,EAAM0D,OAAOL,EAAO,KAhC5BJ,EAAgBrE,SAAW,QAAS,MAoCpCC,QACKC,OAAO,gBACPkE,QAAQ,kBAAmBC,GAvCpC,CAAUvE,QAAAA","file":"../app.min.js","sourcesContent":["namespace APPCA {\r\n    appRun.$inject = [];\r\n    function appRun() {\r\n\r\n    }\r\n\r\n    angular\r\n        .module('AppContaAzul', [\"ngRoute\", \"ngTable\"])\r\n        .run(appRun);\r\n}","namespace APPCA {\r\n\r\n    Router.$inject = [\"$routeProvider\"];\r\n    function Router($routeProvider: ng.route.IRouteProvider) {\r\n        $routeProvider\r\n            .when(\"/veiculos\", {\r\n                templateUrl: \"views/veiculos.html\",\r\n                controller: \"VeiculosController\",\r\n                controllerAs: \"vm\"\r\n            })\r\n            .otherwise({\r\n                redirectTo: \"/veiculos\"\r\n            });\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .config(Router);\r\n}","namespace APPCA {\r\n    VeiculosController.$inject = ['VeiculosService', 'NgTableParams', 'MarcasService', 'VeiculosModel'];\r\n    function VeiculosController(VS, NgTableParams, MS, VeiculosModel) {\r\n        let vm = this;\r\n        vm.lista = <Array<IVeiculos>>[];\r\n        vm.listaMarcas = [];\r\n        vm.listaModelos = [];\r\n        vm.titleModal = \"Incluir\";\r\n        vm.Model = VeiculosModel.Model;\r\n        vm.tableView = tableParams();\r\n        vm.selecionaModelos = selecionaModelos;\r\n        vm.abrirModal = abrirModal;\r\n\r\n        init();\r\n\r\n        function tableParams() {\r\n            let config = {\r\n                initialParams: {\r\n                    count: 2\r\n                },\r\n                initialSettings: {\r\n                    counts: [],\r\n                    paginationMaxBlocks: 13,\r\n                    paginationMinBlocks: 2,\r\n                    dataset: vm.lista\r\n                }\r\n            }\r\n            return new NgTableParams(config.initialParams, config.initialSettings);\r\n        }\r\n\r\n        function abrirModal() {\r\n            vm.titleModal = \"Incluir\";\r\n            $(\"#veiculosModal\").modal(\"show\");\r\n        }\r\n\r\n        function selecionaModelos() {\r\n            vm.listaModelos = [];\r\n            if (vm.Model.marca) {\r\n                vm.listaModelos = MS.getModelos(vm.Model.marca);\r\n            }\r\n        }\r\n\r\n        function init() {\r\n\r\n            VS.getAll().then((veiculos) => {\r\n                vm.lista = veiculos;\r\n                vm.tableView.settings({\r\n                    dataset: vm.lista\r\n                });\r\n            });\r\n\r\n            MS.getMarcas().then((result) => {\r\n                vm.listaMarcas = result;\r\n            });\r\n\r\n            $(\"#veiculosModal\").on(\"hide.bs.modal\", () => {\r\n                vm.listaModelos = [];\r\n                vm.Model = VeiculosModel.Model;\r\n                $(\"#veiculos\").get(0).reset();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .controller(\"VeiculosController\", VeiculosController);\r\n}","namespace APPCA {\r\n    function VeiculosModel(): IVeiculos {\r\n        let Model = {\r\n            combustivel: \"\",\r\n            imagem: \"\",\r\n            marca: \"\",\r\n            modelo: \"\",\r\n            placa: \"\",\r\n            valor: 0\r\n        };\r\n\r\n        return {\r\n            model: Model\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"VeiculosModel\", VeiculosModel);\r\n}","namespace APPCA {\r\n    MarcasService.$inject = [\"$http\", \"$q\"];\r\n    function MarcasService($http, $q) {\r\n        let listaMarcas = [],\r\n            listaModelos = {},\r\n            def = $q.defer();\r\n\r\n        $http.get(\"data/marcas-veiculos.json\").then((result) => {\r\n            let res = angular.fromJson(result.data);\r\n            listaMarcas = res.Marcas;\r\n            listaModelos = res.Modelos;\r\n            def.resolve(listaMarcas);\r\n        });\r\n\r\n\r\n        return {\r\n            getMarcas: _getMarcas,\r\n            getModelos: _getModelos\r\n        }\r\n\r\n        function _getMarcas() {\r\n            return def.promise;\r\n        }\r\n\r\n        function _getModelos(modelo: string): Array<string> {\r\n            return listaModelos[modelo];\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"MarcasService\", MarcasService);\r\n}","namespace APPCA {\r\n    VeiculosService.$inject = [\"$http\", \"$q\"];\r\n    function VeiculosService($http, $q) {\r\n        let lista = [];\r\n        return {\r\n            getAll: _getAll,\r\n            getOne: _getOne,\r\n            save: _save,\r\n            del: _delete\r\n        }\r\n\r\n        function _getAll() {\r\n            let def = $q.defer();\r\n            if (!lista.length) {\r\n                $http.get(\"data/conta-azul-dados.json\").then((result) => {\r\n                    lista = angular.fromJson(result.data.Veiculos);\r\n                    def.resolve(lista);\r\n                });\r\n            } else {\r\n                def.resolve(lista);\r\n            }\r\n            return def.promise;\r\n        }\r\n\r\n        function _getOne(index) {\r\n            return lista[index];\r\n        }\r\n\r\n        function _save(obj) {\r\n            lista.push(obj);\r\n        }\r\n\r\n        function _delete(index) {\r\n            lista.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"VeiculosService\", VeiculosService);\r\n}"]}