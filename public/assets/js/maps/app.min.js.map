{"version":3,"sources":["../../maps/src/ts/bootstrap/bootstrap.app.ts","../../maps/src/ts/bootstrap/router.bootstrap.ts","../../maps/src/ts/controller/veiculos.controller.ts","../../maps/src/ts/helps/mensagens.help.ts","../../maps/src/ts/helps/util.helps.ts","../../maps/src/ts/model/veiculos.model.ts","../../maps/src/ts/service/marcas.modelos.service.ts","../../maps/src/ts/service/veiculos.service.ts"],"names":["APPCA","appRun","$inject","angular","module","run","Router","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","config","VeiculosController","VS","NgTableParams","MS","VeiculosModel","Util","$filter","tableParams","initialParams","count","initialSettings","counts","paginationMaxBlocks","paginationMinBlocks","dataset","vm","lista","selecionaModelos","listaModelos","Model","marca","getModelos","getVeiculos","BuscarTodos","then","veiculos","this","oldList","listaMarcas","titleModal","allChecks","search","model","abrirModal","$","modal","editar","id","veiculo","BuscarUm","salvar","isValid","hasOwnProperty","Atualizar","Salvar","excluir","placa","Deletar","validaPlaca","testaPlaca","existePlaca","marqueAllChecks","forEach","item","linhaAtiva","ativaLinha","linha","upper","data","toUpperCase","corrigeValor","test","valor","replace","toLocaleString","filtrar","length","copy","numeros","getMarcas","result","document","on","event","preventDefault","ekkoLightbox","MsgInfos","_geraEl","tipo","ico","msg","_boxMsg","_disparaAlert","obj","_removerAfterTime","_addAlert","_checkMsg","match","_isStringArray","_isStringObjeto","isArray","join","isObject","JSON","stringify","parse","split","_hasAlert","box","find","is","$tpl","attr","Date","now","hide","prepend","append","last","fadeIn","temporizer","setTimeout","fadeOut","remove","clearTimeout","removeAlertBox","empty","success","msgInput","info","warning","danger","factory","searchItemId","idItem","sort","a","b","listaTamanho","meioLista","Math","round","i","getNomeImagemLink","link","linkSplit","nome","substring","registro","callbackSim","callbackNao","title","BootstrapDialog","show","type","TYPE_DANGER","size","SIZE_SMALL","message","buttons","label","cssClass","action","dialog","close","combustivel","imagem","modelo","MarcasService","$http","$q","def","defer","get","res","fromJson","Marcas","Modelos","resolve","promise","service","VeiculosService","prepareLista","valorCorrigido","nomeImagem","Veiculos","push","posiIntem","indexOf","splice"],"mappings":"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","file":"../app.min.js","sourcesContent":["namespace APPCA {\r\n    appRun.$inject = [];\r\n    function appRun() {\r\n\r\n    }\r\n\r\n    angular\r\n        .module('AppContaAzul', [\"ngRoute\", \"ngTable\"])\r\n        .run(appRun);\r\n}","namespace APPCA {\r\n\r\n    Router.$inject = [\"$routeProvider\"];\r\n    function Router($routeProvider: ng.route.IRouteProvider) {\r\n        $routeProvider\r\n            .when(\"/veiculos\", {\r\n                templateUrl: \"views/veiculos.html\",\r\n                controller: \"VeiculosController\",\r\n                controllerAs: \"vm\"\r\n            })\r\n            .otherwise({\r\n                redirectTo: \"/veiculos\"\r\n            });\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .config(Router);\r\n}","namespace APPCA {\r\n    VeiculosController.$inject = ['VeiculosService', 'NgTableParams', 'MarcasService', 'VeiculosModel', 'UtilHelpers', '$filter'];\r\n    function VeiculosController(VS, NgTableParams, MS, VeiculosModel, Util, $filter) {\r\n        let vm = this;\r\n        let oldList = [];\r\n        vm.lista = <Array<IVeiculos>>[];\r\n        vm.listaMarcas = [];\r\n        vm.listaModelos = [];\r\n        vm.titleModal = \"Incluir\";\r\n        vm.allChecks = false;\r\n        vm.search = '';\r\n        vm.Model = VeiculosModel.model();\r\n\r\n\r\n        vm.tableParams = tableParams();\r\n        vm.selecionaModelos = selecionaModelos;\r\n        vm.abrirModal = abrirModal;\r\n        vm.editar = editar;\r\n        vm.salvar = salvar;\r\n        vm.excluir = excluir;\r\n        vm.validaPlaca = validaPlaca;\r\n        vm.marqueAllChecks = marqueAllChecks;\r\n        vm.ativaLinha = ativaLinha;\r\n        vm.upper = upper;\r\n        vm.corrigeValor = corrigeValor;\r\n        vm.filtrar = filtrar;\r\n        vm.numeros = numeros;\r\n\r\n        init();\r\n\r\n        function numeros() {\r\n            if (vm.Model.valor) {\r\n                return vm.Model.valor = vm.Model.valor.replace(/\\D/g, '');\r\n            }\r\n        }\r\n\r\n        function filtrar() {\r\n            if (!vm.search && oldList.length) {\r\n                vm.lista = angular.copy(oldList);\r\n                vm.tableParams = tableParams();\r\n                oldList = [];\r\n            } else if (vm.search) {\r\n                if (!oldList.length) oldList = angular.copy(vm.lista);\r\n                vm.lista = $filter('filter')(vm.lista, vm.search);\r\n                vm.tableParams = tableParams();\r\n            }\r\n        }\r\n\r\n        function excluir(veiculo) {\r\n            Util.excluir(veiculo.placa, () => {\r\n                VS.Deletar(veiculo);\r\n                getVeiculos();\r\n            });\r\n        }\r\n\r\n        function marqueAllChecks() {\r\n            vm.lista.forEach(item => {\r\n                if (vm.allChecks) {\r\n                    item.linhaAtiva = true;\r\n                } else {\r\n                    item.linhaAtiva = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        function ativaLinha(linha) {\r\n            linha.linhaAtiva = !linha.linhaAtiva;\r\n            vm.allChecks = false;\r\n        }\r\n\r\n        function tableParams() {\r\n            let config = {\r\n                initialParams: {\r\n                    count: 5\r\n                },\r\n                initialSettings: {\r\n                    counts: [],\r\n                    paginationMaxBlocks: 13,\r\n                    paginationMinBlocks: 2,\r\n                    dataset: vm.lista\r\n                }\r\n            }\r\n            return new NgTableParams(config.initialParams, config.initialSettings);\r\n        }\r\n\r\n        function abrirModal() {\r\n            vm.titleModal = \"Incluir\";\r\n            vm.listaModelos = [];\r\n            vm.Model = VeiculosModel.model();\r\n            $(\"#veiculosModal\").modal(\"show\");\r\n        }\r\n\r\n        function selecionaModelos() {\r\n            vm.listaModelos = [];\r\n            if (vm.Model.marca) {\r\n                vm.listaModelos = MS.getModelos(vm.Model.marca);\r\n            }\r\n        }\r\n\r\n        function editar(id: number) {\r\n            let veiculo = VS.BuscarUm(id);\r\n            vm.Model = veiculo;\r\n            vm.titleModal = \"Editar\";\r\n            selecionaModelos();\r\n            $(\"#veiculosModal\").modal(\"show\");\r\n        }\r\n\r\n        function salvar(isValid) {\r\n            if (!isValid) return;\r\n\r\n            if (vm.Model.hasOwnProperty(\"id\")) {\r\n                VS.Atualizar(vm.Model);\r\n            } else {\r\n                VS.Salvar(vm.Model);\r\n            }\r\n\r\n            getVeiculos();\r\n            $(\"#veiculosModal\").modal(\"hide\");\r\n        }\r\n\r\n        function validaPlaca() {\r\n            VS.testaPlaca(vm.Model.placa);\r\n            VS.existePlaca(vm.Model.placa);\r\n        }\r\n\r\n        function upper() {\r\n            let data = vm.Model.placa;\r\n            if (!data) return;\r\n            return vm.Model.placa = data.toUpperCase();\r\n        }\r\n\r\n        function corrigeValor() {\r\n            if (/\\D/g.test(vm.Model.valor)) return;\r\n            let valor = vm.Model.valor.replace(/\\./g, '');\r\n            return vm.Model.valor = (+valor).toLocaleString();\r\n        }\r\n\r\n        function getVeiculos() {\r\n            VS.BuscarTodos().then((veiculos) => {\r\n                vm.lista = veiculos;\r\n                vm.tableParams = tableParams();\r\n            });\r\n        }\r\n\r\n        function init() {\r\n\r\n            getVeiculos();\r\n\r\n            MS.getMarcas().then((result) => {\r\n                vm.listaMarcas = result;\r\n            });\r\n\r\n            $(document).on('click', '[data-toggle=\"lightbox\"]', function (event) {\r\n                event.preventDefault();\r\n                $(this).ekkoLightbox();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .controller(\"VeiculosController\", VeiculosController);\r\n}","namespace APPCA {\r\n\r\n    MsgInfos.$inject = [];\r\n    function MsgInfos() {\r\n        var box = $(\"main\");\r\n\r\n        return {\r\n            success: _success,\r\n            info: _info,\r\n            warning: _warning,\r\n            danger: _danger\r\n        }\r\n\r\n        function _geraEl(tipo, ico, msg) {\r\n            return '<li><p class=\"alert alert-' + tipo + ' alert-dismissible\">' +\r\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>' +\r\n                '<span class=\"glyphicon glyphicon-' + ico + '\"></span> <strong>' + msg + '</strong>' +\r\n                '</p></li>';\r\n        };\r\n\r\n        function _boxMsg() {\r\n            return \"<div class='alertSystem'><ul class='list-alert'></ul></div>\";\r\n        }\r\n\r\n        function _success(msgInput) {\r\n            _disparaAlert(_geraEl(\"success\", \"ok-sign\", _checkMsg(msgInput)));\r\n        };\r\n\r\n        function _info(msgInput) {\r\n            _disparaAlert(_geraEl(\"info\", \"info-sign\", _checkMsg(msgInput)));\r\n        };\r\n\r\n        function _warning(msgInput) {\r\n            _disparaAlert(_geraEl(\"warning\", \"alert\", _checkMsg(msgInput)));\r\n        };\r\n\r\n        function _danger(msgInput) {\r\n            _disparaAlert(_geraEl(\"danger\", \"remove-sign\", _checkMsg(msgInput)));\r\n        };\r\n\r\n        function _disparaAlert(obj) {\r\n            _removerAfterTime(_addAlert(obj));\r\n        };\r\n\r\n        function _checkMsg(msg) {\r\n            if (typeof msg === \"string\") {\r\n                if (msg.match(/^\\[.*\\]$/) !== null) {\r\n                    return _isStringArray(msg);\r\n                } else if (msg.match(/^\\{.*\\}$/) !== null) {\r\n                    return _isStringObjeto(msg);\r\n                }\r\n            } else {\r\n                if (angular.isArray(msg)) {\r\n                    return msg.join(\"<br>\");\r\n                } else if (angular.isObject(msg)) {\r\n                    return _isStringObjeto(JSON.stringify(msg));\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n        function _isStringArray(msg) {\r\n            var arr = JSON.parse(msg);\r\n            return arr.join(\"<br>\");\r\n        };\r\n\r\n        function _isStringObjeto(msg) {\r\n            var arrayString = msg.replace(/^\\{(.*)\\}$/, \"$1\").split(',');\r\n            return arrayString.join(\"<br>\");\r\n        };\r\n\r\n        function _hasAlert() {\r\n            return box.find(\".alertSystem\").is(\":visible\");\r\n        };\r\n\r\n        function _addAlert(obj) {\r\n            var $tpl = $(obj).attr(\"id\", Date.now()).hide();\r\n            if (!_hasAlert()) {\r\n                box.prepend(_boxMsg());\r\n            }\r\n\r\n            return box\r\n                .find(\".alertSystem .list-alert\")\r\n                .append($tpl)\r\n                .find(\"li\")\r\n                .last()\r\n                .fadeIn();\r\n        };\r\n\r\n        function _removerAfterTime(obj) {\r\n            var id = obj.attr(\"id\");\r\n            var temporizer = setTimeout(function () {\r\n                var alert = box.find(\".alertSystem\").find(\"#\" + id);\r\n                alert.fadeOut(\"slow\", function () {\r\n                    $(this).remove();\r\n                    clearTimeout(temporizer);\r\n                    removeAlertBox();\r\n                });\r\n            }, 6000)\r\n        };\r\n\r\n        function removeAlertBox() {\r\n            if (!box.find(\".alertSystem\").find(\"li\").length) {\r\n                box.find(\".alertSystem\").empty().remove();\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"MsgInfos\", MsgInfos);\r\n}","namespace APPCA {\r\n    function UtilHelpers() {\r\n\r\n        return {\r\n            searchItemId: searchItemId,\r\n            getNomeImagemLink: getNomeImagemLink,\r\n            excluir: excluir\r\n        };\r\n\r\n        function searchItemId(lista: Array<any>, idItem: number) {\r\n            lista.sort((a, b) => {\r\n                return a.id > b.id;\r\n            });\r\n\r\n            let listaTamanho = lista.length,\r\n                meioLista = Math.round(listaTamanho / 2),\r\n                posiStart = idItem <= meioLista ? 0 : meioLista;\r\n\r\n            for (let i = posiStart; i < idItem; i++) {\r\n                if (lista[i].id === idItem) {\r\n                    return lista[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function getNomeImagemLink(link) {\r\n            if (!link) return;\r\n\r\n            var linkSplit = link.split(\"/\");\r\n            var nome = linkSplit[linkSplit.length - 1];\r\n\r\n            nome = nome.replace(/\\.[a-z]{3,4}$/, '');\r\n            nome = nome.replace(/(_|\\.)/g, ' ');\r\n\r\n            return nome.substring(0, 18);\r\n        }\r\n\r\n        function excluir(registro, callbackSim, callbackNao, title, msg) {\r\n            if (!callbackSim) return;\r\n\r\n            BootstrapDialog.show({\r\n                type: BootstrapDialog.TYPE_DANGER,\r\n                size: BootstrapDialog.SIZE_SMALL,\r\n                title: title || \"Excluir Registro\",\r\n                message: msg || `Deseja realmente excluir o registro: <br><strong>${registro}</strong>?`,\r\n                buttons: [\r\n                    {\r\n                        label: 'Não',\r\n                        cssClass: 'btn-default',\r\n                        action: function (dialog) {\r\n                            dialog.close();\r\n                            if (callbackNao) {\r\n                                callbackNao();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Sim',\r\n                        cssClass: 'btn-danger',\r\n                        action: function (dialog) {\r\n                            dialog.close();\r\n                            callbackSim();\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"UtilHelpers\", UtilHelpers);\r\n}","namespace APPCA {\r\n    function VeiculosModel(): IVeiculos {\r\n        let Model = {\r\n            combustivel: \"\",\r\n            imagem: \"\",\r\n            marca: \"\",\r\n            modelo: \"\",\r\n            placa: \"\",\r\n            valor: 0\r\n        };\r\n\r\n        function getModel() {\r\n            return angular.copy(Model);\r\n        }\r\n\r\n        return {\r\n            model: getModel\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"VeiculosModel\", VeiculosModel);\r\n}","namespace APPCA {\r\n    MarcasService.$inject = [\"$http\", \"$q\"];\r\n    function MarcasService($http, $q) {\r\n        let listaMarcas = [],\r\n            listaModelos = {},\r\n            def = $q.defer();\r\n\r\n        $http.get(\"data/marcas-veiculos.json\").then((result) => {\r\n            let res = angular.fromJson(result.data);\r\n            listaMarcas = res.Marcas;\r\n            listaModelos = res.Modelos;\r\n            def.resolve(listaMarcas);\r\n        });\r\n\r\n\r\n        return {\r\n            getMarcas: _getMarcas,\r\n            getModelos: _getModelos\r\n        }\r\n\r\n        function _getMarcas() {\r\n            return def.promise;\r\n        }\r\n\r\n        function _getModelos(modelo: string): Array<string> {\r\n            return listaModelos[modelo];\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"MarcasService\", MarcasService);\r\n}","namespace APPCA {\r\n    VeiculosService.$inject = [\"$http\", \"$q\", \"MsgInfos\", \"UtilHelpers\"];\r\n    function VeiculosService($http, $q, MsgInfos, Util) {\r\n        let lista = [];\r\n        return {\r\n            BuscarTodos: _getAll,\r\n            BuscarUm: _getOne,\r\n            Salvar: _save,\r\n            Atualizar: _atualiza,\r\n            Deletar: _delete,\r\n            existePlaca: existePlaca,\r\n            testaPlaca: testaPlaca\r\n        }\r\n\r\n        function _getAll() {\r\n            let def = $q.defer();\r\n            if (!lista.length) {\r\n                $http.get(\"data/conta-azul-dados.json\").then((result) => {\r\n                    lista = angular.fromJson(result.data.Veiculos);\r\n                    prepareLista();\r\n                    def.resolve(lista);\r\n                });\r\n            } else {\r\n                prepareLista();\r\n                def.resolve(lista);\r\n            }\r\n\r\n            return def.promise;\r\n        }\r\n\r\n        function prepareLista() {\r\n            lista.forEach(item => {\r\n                item.valorCorrigido = \"R$ \" + (+item.valor).toLocaleString() + \",00\";\r\n                item.nomeImagem = Util.getNomeImagemLink(item.imagem);\r\n                item.linhaAtiva = false;\r\n            });\r\n        }\r\n\r\n        function _getOne(id) {\r\n            let item = Util.searchItemId(lista, id)\r\n            return item;\r\n        }\r\n\r\n        function _atualiza(obj) {\r\n            if (!testaPlaca(obj.placa)) return;\r\n            if (existePlaca(obj.placa)) return;\r\n\r\n            let posiIntem = lista.indexOf(obj);\r\n            obj.valor = obj.valor.replace(/\\./g,'');            \r\n            lista[posiIntem] = obj;\r\n            MsgInfos.success(\"Veículo atualizado com sucesso!\");\r\n        }\r\n\r\n        function _save(obj) {\r\n            if (!testaPlaca(obj.placa)) return;\r\n            if (existePlaca(obj.placa)) return;\r\n            if(obj.valor !== 0) obj.valor = obj.valor.replace(/\\./g,'');\r\n            lista.push(obj);\r\n            MsgInfos.success(\"Veículo cadastrado com sucesso!\");\r\n        }\r\n\r\n        function _delete(veiculo) {\r\n            let item = lista.indexOf(veiculo);\r\n            if (item >= 0) {\r\n                lista.splice(item, 1);\r\n                MsgInfos.success(\"Veículo excluido com sucesso!\");\r\n            }\r\n        }\r\n\r\n        function existePlaca(placa) {\r\n            let i = lista.length;\r\n            while (i--) {\r\n                if (lista[i].placa === placa) {\r\n                    MsgInfos.danger(\"Já existe um veículo cadastrado com a placa informada\");\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function testaPlaca(placa){\r\n            let pattern = /[a-zA-Z]{3}-[0-9]{4}/;\r\n            if(!pattern.test(placa)){\r\n                MsgInfos.danger(\"A placa não está no formato correto\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"VeiculosService\", VeiculosService);\r\n}"]}