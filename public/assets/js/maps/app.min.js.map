{"version":3,"sources":["../../maps/src/ts/bootstrap/bootstrap.app.ts","../../maps/src/ts/bootstrap/router.bootstrap.ts","../../maps/src/ts/controller/veiculos.controller.ts","../../maps/src/ts/model/veiculos.model.ts","../../maps/src/ts/service/veiculos.service.ts"],"names":["APPCA","appRun","$inject","angular","module","run","Router","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","config","VeiculosController","VS","NgTableParams","vm","this","lista","getAll","then","veiculos","tableView","settings","dataset","tableParams","initialParams","count","initialSettings","counts","paginationMaxBlocks","paginationMinBlocks","factory","combustivel","imagem","marca","modelo","placa","valor","VeiculosService","$http","$q","def","defer","length","resolve","get","result","fromJson","data","Veiculos","promise","getOne","index","save","obj","push","del","splice","service"],"mappings":"AAAA,IAAUA,OAAV,SAAUA,GAEN,SAAAC,KADAA,EAAOC,WAKPC,QACKC,OAAO,gBAAiB,UAAW,YACnCC,IAAIJ,GARb,CAAUD,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAGN,SAAAM,EAAgBC,GACZA,EACKC,KAAK,aACFC,YAAa,sBACbC,WAAY,qBACZC,aAAc,OAEjBC,WACGC,WAAY,cATxBP,EAAOJ,SAAW,kBAalBC,QACKC,OAAO,gBACPU,OAAOR,GAjBhB,CAAUN,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAEN,SAAAe,EAA4BC,EAAIC,GAC5B,IAAIC,EAAKC,KACTD,EAAGE,SAEHJ,EAAGK,SAASC,KAAK,SAACC,GACdL,EAAGE,MAAQG,EAEXL,EAAGM,UAAUC,UACTC,QAASR,EAAGE,UAIpBF,EAAGS,YAAc,WACb,IAAIC,GACAC,MAAO,GAEPC,GACAC,UACAC,oBAAqB,GACrBC,oBAAqB,EACrBP,QAASR,EAAGE,OAEhB,OAAO,IAAIH,EAAcW,EAAeE,IAG5CZ,EAAGM,UAAYN,EAAGS,cA1BtBZ,EAAmBb,SAAW,kBAAmB,iBA+BjDC,QACKC,OAAO,gBACPM,WAAW,qBAAsBK,GAlC1C,CAAUf,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAYNG,QACKC,OAAO,gBACP8B,QAAQ,gBAbb,WACI,OACIC,YAAa,GACbC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,MAAO,KARnB,CAAUxC,QAAAA,WCAV,IAAUA,OAAV,SAAUA,GAEN,SAAAyC,EAAyBC,EAAOC,GAC5B,IAAIvB,KACJ,OACIC,OAMJ,WACI,IAAIuB,EAAMD,EAAGE,QASb,OARKzB,EAAM0B,OAMPF,EAAIG,QAAQ3B,GALZsB,EAAMM,IAAI,8BAA8B1B,KAAK,SAAC2B,GAC1C7B,EAAQjB,QAAQ+C,SAASD,EAAOE,KAAKC,UACrCR,EAAIG,QAAQ3B,KAKbwB,EAAIS,SAfXC,OAkBJ,SAAiBC,GACb,OAAOnC,EAAMmC,IAlBbC,KAqBJ,SAAeC,GACXrC,EAAMsC,KAAKD,IArBXE,IAwBJ,SAAiBJ,GACbnC,EAAMwC,OAAOL,EAAO,KAhC5Bd,EAAgBvC,SAAW,QAAS,MAoCpCC,QACKC,OAAO,gBACPyD,QAAQ,kBAAmBpB,GAvCpC,CAAUzC,QAAAA","file":"../app.min.js","sourcesContent":["namespace APPCA {\r\n    appRun.$inject = [];\r\n    function appRun() {\r\n\r\n    }\r\n\r\n    angular\r\n        .module('AppContaAzul', [\"ngRoute\", \"ngTable\"])\r\n        .run(appRun);\r\n}","namespace APPCA {\r\n\r\n    Router.$inject = [\"$routeProvider\"];\r\n    function Router($routeProvider: ng.route.IRouteProvider) {\r\n        $routeProvider\r\n            .when(\"/veiculos\", {\r\n                templateUrl: \"views/veiculos.html\",\r\n                controller: \"VeiculosController\",\r\n                controllerAs: \"vm\"\r\n            })\r\n            .otherwise({\r\n                redirectTo: \"/veiculos\"\r\n            });\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .config(Router);\r\n}","namespace APPCA {\r\n    VeiculosController.$inject = ['VeiculosService', 'NgTableParams'];\r\n    function VeiculosController(VS, NgTableParams) {\r\n        let vm = this;\r\n        vm.lista = <Array<IVeiculos>>[];\r\n\r\n        VS.getAll().then((veiculos) => {\r\n            vm.lista = veiculos;\r\n            debugger;\r\n            vm.tableView.settings({\r\n                dataset: vm.lista\r\n            });\r\n        });\r\n\r\n        vm.tableParams = function () {\r\n            var initialParams = {\r\n                count: 2\r\n            };\r\n            var initialSettings = {\r\n                counts: [],\r\n                paginationMaxBlocks: 13,\r\n                paginationMinBlocks: 2,\r\n                dataset: vm.lista\r\n            };\r\n            return new NgTableParams(initialParams, initialSettings);\r\n        }\r\n\r\n        vm.tableView = vm.tableParams();\r\n\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .controller(\"VeiculosController\", VeiculosController);\r\n}","namespace APPCA {\r\n    function VeiculosModel(): IVeiculos {\r\n        return {\r\n            combustivel: \"\",\r\n            imagem: \"\",\r\n            marca: \"\",\r\n            modelo: \"\",\r\n            placa: \"\",\r\n            valor: 0\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"VeiculosModel\", VeiculosModel);\r\n}","namespace APPCA {\r\n    VeiculosService.$inject = [\"$http\", \"$q\"];\r\n    function VeiculosService($http, $q) {\r\n        let lista = [];\r\n        return {\r\n            getAll: _getAll,\r\n            getOne: _getOne,\r\n            save: _save,\r\n            del: _delete\r\n        }\r\n\r\n        function _getAll() {\r\n            let def = $q.defer();\r\n            if (!lista.length) {\r\n                $http.get(\"data/conta-azul-dados.json\").then((result) => {\r\n                    lista = angular.fromJson(result.data.Veiculos);\r\n                    def.resolve(lista);\r\n                });\r\n            } else {\r\n                def.resolve(lista);\r\n            }\r\n            return def.promise;\r\n        }\r\n\r\n        function _getOne(index) {\r\n            return lista[index];\r\n        }\r\n\r\n        function _save(obj) {\r\n            lista.push(obj);\r\n        }\r\n\r\n        function _delete(index) {\r\n            lista.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"VeiculosService\", VeiculosService);\r\n}"]}