{"version":3,"sources":["../../maps/src/ts/bootstrap/bootstrap.app.ts","../../maps/src/ts/bootstrap/router.bootstrap.ts","../../maps/src/ts/controller/veiculos.controller.ts","../../maps/src/ts/helps/util.helps.ts","../../maps/src/ts/model/veiculos.model.ts","../../maps/src/ts/service/marcas.modelos.service.ts","../../maps/src/ts/service/veiculos.service.ts"],"names":["APPCA","appRun","$inject","angular","module","run","Router","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","config","VeiculosController","VS","NgTableParams","MS","VeiculosModel","Util","selecionaModelos","vm","listaModelos","Model","marca","getModelos","getVeiculos","getAll","then","veiculos","lista","forEach","item","valorCorrigido","valor","toLocaleString","nomeImagem","getNomeImagemLink","imagem","linhaAtiva","tableView","settings","dataset","this","listaMarcas","titleModal","allChecks","model","initialParams","count","initialSettings","counts","paginationMaxBlocks","paginationMinBlocks","tableParams","abrirModal","$","modal","editar","id","veiculo","searchItemId","salvar","isValid","excluir","placa","validaPlaca","data","toLowerCase","patterns","texto","numero","test","toUpperCase","marqueAllChecks","ativaLinha","linha","getMarcas","result","document","on","event","preventDefault","ekkoLightbox","factory","idItem","sort","a","b","listaTamanho","length","meioLista","Math","round","i","link","linkSplit","split","nome","replace","substring","registro","callbackSim","callbackNao","title","msg","BootstrapDialog","show","type","TYPE_DANGER","size","SIZE_SMALL","message","buttons","label","cssClass","action","dialog","close","combustivel","modelo","MarcasService","$http","$q","def","defer","get","res","fromJson","Marcas","Modelos","resolve","promise","service","VeiculosService","Veiculos","getOne","index","save","obj","push","del","splice"],"mappings":"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","file":"../app.min.js","sourcesContent":["namespace APPCA {\r\n    appRun.$inject = [];\r\n    function appRun() {\r\n\r\n    }\r\n\r\n    angular\r\n        .module('AppContaAzul', [\"ngRoute\", \"ngTable\"])\r\n        .run(appRun);\r\n}","namespace APPCA {\r\n\r\n    Router.$inject = [\"$routeProvider\"];\r\n    function Router($routeProvider: ng.route.IRouteProvider) {\r\n        $routeProvider\r\n            .when(\"/veiculos\", {\r\n                templateUrl: \"views/veiculos.html\",\r\n                controller: \"VeiculosController\",\r\n                controllerAs: \"vm\"\r\n            })\r\n            .otherwise({\r\n                redirectTo: \"/veiculos\"\r\n            });\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .config(Router);\r\n}","namespace APPCA {\r\n    VeiculosController.$inject = ['VeiculosService', 'NgTableParams', 'MarcasService', 'VeiculosModel', 'UtilHelpers'];\r\n    function VeiculosController(VS, NgTableParams, MS, VeiculosModel, Util) {\r\n        let vm = this;\r\n        vm.lista = <Array<IVeiculos>>[];\r\n        vm.listaMarcas = [];\r\n        vm.listaModelos = [];\r\n        vm.titleModal = \"Incluir\";\r\n        vm.allChecks = false;\r\n        vm.Model = VeiculosModel.model();\r\n        vm.tableView = tableParams();\r\n        vm.selecionaModelos = selecionaModelos;\r\n        vm.abrirModal = abrirModal;\r\n        vm.editar = editar;\r\n        vm.salvar = salvar;\r\n        vm.excluir = excluir;\r\n        vm.validaPlaca = validaPlaca;\r\n        vm.marqueAllChecks = marqueAllChecks;\r\n        vm.ativaLinha = ativaLinha;\r\n\r\n        init();\r\n\r\n        function excluir(veiculo) {\r\n            Util.excluir(veiculo.placa, () => {\r\n\r\n            });\r\n        }\r\n        function marqueAllChecks() {\r\n            vm.lista.forEach(item => {\r\n                if (vm.allChecks) {\r\n                    item.linhaAtiva = true;\r\n                } else {\r\n                    item.linhaAtiva = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        function ativaLinha(linha) {\r\n            linha.linhaAtiva = !linha.linhaAtiva;\r\n            vm.allChecks = false;\r\n        }\r\n\r\n        function tableParams() {\r\n            let config = {\r\n                initialParams: {\r\n                    count: 2\r\n                },\r\n                initialSettings: {\r\n                    counts: [],\r\n                    paginationMaxBlocks: 13,\r\n                    paginationMinBlocks: 2,\r\n                    dataset: vm.lista\r\n                }\r\n            }\r\n            return new NgTableParams(config.initialParams, config.initialSettings);\r\n        }\r\n\r\n        function abrirModal() {\r\n            vm.titleModal = \"Incluir\";\r\n            vm.listaModelos = [];\r\n            vm.Model = VeiculosModel.model();\r\n            $(\"#veiculosModal\").modal(\"show\");\r\n        }\r\n\r\n        function selecionaModelos() {\r\n            vm.listaModelos = [];\r\n            if (vm.Model.marca) {\r\n                vm.listaModelos = MS.getModelos(vm.Model.marca);\r\n            }\r\n        }\r\n\r\n        function editar(id: number) {\r\n            let veiculo = Util.searchItemId(vm.lista, id);\r\n            vm.Model = veiculo;\r\n            vm.titleModal = \"Editar\";\r\n            selecionaModelos();\r\n            $(\"#veiculosModal\").modal(\"show\");\r\n        }\r\n\r\n        function salvar(isValid) {\r\n        }\r\n\r\n        function validaPlaca() {\r\n            var data = vm.Model.placa.toLowerCase(),\r\n                patterns = {\r\n                    texto: /[a-z]{1,3}/,\r\n                    numero: /[0-9]{1,4}/,\r\n                    placa: /[a-z]{3}-[0-9]{4}/\r\n                };\r\n            if (patterns.placa.test(data)) {\r\n                return vm.Model.placa = data.toUpperCase();\r\n            } else if (patterns.texto.test(data)) {\r\n                return vm.Model.placa = data.toUpperCase();\r\n            } else {\r\n                vm.Model.placa = \"\";\r\n            }\r\n        }\r\n\r\n        function getVeiculos() {\r\n            VS.getAll().then((veiculos) => {\r\n                vm.lista = veiculos;\r\n                vm.lista.forEach(item => {\r\n                    item.valorCorrigido = \"R$ \" + (+item.valor).toLocaleString() + \",00\";\r\n                    item.nomeImagem = Util.getNomeImagemLink(item.imagem);\r\n                    item.linhaAtiva = false;\r\n                });\r\n                vm.tableView.settings({\r\n                    dataset: vm.lista\r\n                });\r\n            });\r\n        }\r\n\r\n        function init() {\r\n\r\n            getVeiculos();\r\n\r\n            MS.getMarcas().then((result) => {\r\n                vm.listaMarcas = result;\r\n            });\r\n\r\n            $(document).on('click', '[data-toggle=\"lightbox\"]', function (event) {\r\n                event.preventDefault();\r\n                $(this).ekkoLightbox();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .controller(\"VeiculosController\", VeiculosController);\r\n}","namespace APPCA {\r\n    function UtilHelpers() {\r\n\r\n        return {\r\n            searchItemId: searchItemId,\r\n            getNomeImagemLink: getNomeImagemLink,\r\n            excluir: excluir\r\n        };\r\n\r\n        function searchItemId(lista: Array<any>, idItem: number) {\r\n            lista.sort((a, b) => {\r\n                return a.id > b.id;\r\n            });\r\n\r\n            let listaTamanho = lista.length,\r\n                meioLista = Math.round(listaTamanho / 2),\r\n                posiStart = idItem <= meioLista ? 0 : meioLista;\r\n\r\n            for (let i = posiStart; i < idItem; i++) {\r\n                if (lista[i].id === idItem) {\r\n                    return lista[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function getNomeImagemLink(link) {\r\n            if (!link) return;\r\n\r\n            var linkSplit = link.split(\"/\");\r\n            var nome = linkSplit[linkSplit.length - 1];\r\n\r\n            nome = nome.replace(/\\.[a-z]{3,4}$/, '');\r\n            nome = nome.replace(/(_|\\.)/g, ' ');\r\n\r\n            return nome.substring(0, 25);\r\n        }\r\n\r\n        function excluir(registro, callbackSim, callbackNao, title, msg) {\r\n            if (!callbackSim) return;\r\n\r\n            BootstrapDialog.show({\r\n                type: BootstrapDialog.TYPE_DANGER,\r\n                size: BootstrapDialog.SIZE_SMALL,\r\n                title: title || \"Excluir Registro\",\r\n                message: msg || `Deseja realmente excluir o registro: <br><strong>${registro}</strong>?`,\r\n                buttons: [\r\n                    {\r\n                        label: 'Não',\r\n                        cssClass: 'btn-default',\r\n                        action: function (dialog) {\r\n                            dialog.close();\r\n                            if (callbackNao) {\r\n                                callbackNao();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Sim',\r\n                        cssClass: 'btn-danger',\r\n                        action: function (dialog) {\r\n                            dialog.close();\r\n                            callbackSim();\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"UtilHelpers\", UtilHelpers);\r\n}","namespace APPCA {\r\n    function VeiculosModel(): IVeiculos {\r\n        let Model = {\r\n            combustivel: \"\",\r\n            imagem: \"\",\r\n            marca: \"\",\r\n            modelo: \"\",\r\n            placa: \"\",\r\n            valor: 0\r\n        };\r\n\r\n        function getModel() {\r\n            return Model;\r\n        }\r\n\r\n        return {\r\n            model: getModel\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"VeiculosModel\", VeiculosModel);\r\n}","namespace APPCA {\r\n    MarcasService.$inject = [\"$http\", \"$q\"];\r\n    function MarcasService($http, $q) {\r\n        let listaMarcas = [],\r\n            listaModelos = {},\r\n            def = $q.defer();\r\n\r\n        $http.get(\"data/marcas-veiculos.json\").then((result) => {\r\n            let res = angular.fromJson(result.data);\r\n            listaMarcas = res.Marcas;\r\n            listaModelos = res.Modelos;\r\n            def.resolve(listaMarcas);\r\n        });\r\n\r\n\r\n        return {\r\n            getMarcas: _getMarcas,\r\n            getModelos: _getModelos\r\n        }\r\n\r\n        function _getMarcas() {\r\n            return def.promise;\r\n        }\r\n\r\n        function _getModelos(modelo: string): Array<string> {\r\n            return listaModelos[modelo];\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"MarcasService\", MarcasService);\r\n}","namespace APPCA {\r\n    VeiculosService.$inject = [\"$http\", \"$q\"];\r\n    function VeiculosService($http, $q) {\r\n        let lista = [];\r\n        return {\r\n            getAll: _getAll,\r\n            getOne: _getOne,\r\n            save: _save,\r\n            del: _delete\r\n        }\r\n\r\n        function _getAll() {\r\n            let def = $q.defer();\r\n            if (!lista.length) {\r\n                $http.get(\"data/conta-azul-dados.json\").then((result) => {\r\n                    lista = angular.fromJson(result.data.Veiculos);\r\n                    def.resolve(lista);\r\n                });\r\n            } else {\r\n                def.resolve(lista);\r\n            }\r\n            return def.promise;\r\n        }\r\n\r\n        function _getOne(index) {\r\n            return lista[index];\r\n        }\r\n\r\n        function _save(obj) {\r\n            lista.push(obj);\r\n        }\r\n\r\n        function _delete(index) {\r\n            lista.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"VeiculosService\", VeiculosService);\r\n}"]}