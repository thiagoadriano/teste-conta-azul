{"version":3,"sources":["../../maps/src/ts/bootstrap/bootstrap.app.ts","../../maps/src/ts/bootstrap/router.bootstrap.ts","../../maps/src/ts/controller/veiculos.controller.ts","../../maps/src/ts/helps/mensagens.help.ts","../../maps/src/ts/helps/util.helps.ts","../../maps/src/ts/model/veiculos.model.ts","../../maps/src/ts/service/marcas.modelos.service.ts","../../maps/src/ts/service/veiculos.service.ts"],"names":["APPCA","appRun","$inject","angular","module","run","Router","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","config","VeiculosController","VS","NgTableParams","MS","VeiculosModel","Util","tableParams","initialParams","count","initialSettings","counts","paginationMaxBlocks","paginationMinBlocks","dataset","selecionaModelos","vm","listaModelos","Model","marca","getModelos","getVeiculos","getAll","then","veiculos","lista","forEach","item","valorCorrigido","valor","toLocaleString","nomeImagem","getNomeImagemLink","imagem","linhaAtiva","tableView","settings","this","listaMarcas","titleModal","allChecks","model","abrirModal","$","modal","editar","id","veiculo","searchItemId","salvar","isValid","hasOwnProperty","atualizar","save","excluir","placa","del","validaPlaca","data","toLowerCase","patterns","texto","numero","test","toUpperCase","marqueAllChecks","ativaLinha","linha","getMarcas","result","document","on","event","preventDefault","ekkoLightbox","MsgInfos","_geraEl","tipo","ico","msg","_boxMsg","_disparaAlert","obj","_removerAfterTime","_addAlert","_checkMsg","match","_isStringArray","_isStringObjeto","isArray","join","isObject","JSON","stringify","parse","replace","split","_hasAlert","box","find","is","$tpl","attr","Date","now","hide","prepend","append","last","fadeIn","temporizer","setTimeout","fadeOut","remove","clearTimeout","removeAlertBox","length","empty","success","msgInput","info","warning","danger","factory","idItem","sort","a","b","listaTamanho","meioLista","Math","round","i","link","linkSplit","nome","substring","registro","callbackSim","callbackNao","title","BootstrapDialog","show","type","TYPE_DANGER","size","SIZE_SMALL","message","buttons","label","cssClass","action","dialog","close","combustivel","modelo","MarcasService","$http","$q","def","defer","get","res","fromJson","Marcas","Modelos","resolve","promise","service","VeiculosService","Veiculos","getOne","index","push","arualizar","posiIntem","indexOf","splice"],"mappings":"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","file":"../app.min.js","sourcesContent":["namespace APPCA {\r\n    appRun.$inject = [];\r\n    function appRun() {\r\n\r\n    }\r\n\r\n    angular\r\n        .module('AppContaAzul', [\"ngRoute\", \"ngTable\"])\r\n        .run(appRun);\r\n}","namespace APPCA {\r\n\r\n    Router.$inject = [\"$routeProvider\"];\r\n    function Router($routeProvider: ng.route.IRouteProvider) {\r\n        $routeProvider\r\n            .when(\"/veiculos\", {\r\n                templateUrl: \"views/veiculos.html\",\r\n                controller: \"VeiculosController\",\r\n                controllerAs: \"vm\"\r\n            })\r\n            .otherwise({\r\n                redirectTo: \"/veiculos\"\r\n            });\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .config(Router);\r\n}","namespace APPCA {\r\n    VeiculosController.$inject = ['VeiculosService', 'NgTableParams', 'MarcasService', 'VeiculosModel', 'UtilHelpers'];\r\n    function VeiculosController(VS, NgTableParams, MS, VeiculosModel, Util) {\r\n        let vm = this;\r\n        vm.lista = <Array<IVeiculos>>[];\r\n        vm.listaMarcas = [];\r\n        vm.listaModelos = [];\r\n        vm.titleModal = \"Incluir\";\r\n        vm.allChecks = false;\r\n        vm.Model = VeiculosModel.model();\r\n        vm.tableView = tableParams();\r\n        vm.selecionaModelos = selecionaModelos;\r\n        vm.abrirModal = abrirModal;\r\n        vm.editar = editar;\r\n        vm.salvar = salvar;\r\n        vm.excluir = excluir;\r\n        vm.validaPlaca = validaPlaca;\r\n        vm.marqueAllChecks = marqueAllChecks;\r\n        vm.ativaLinha = ativaLinha;\r\n\r\n        init();\r\n\r\n        function excluir(veiculo) {\r\n            Util.excluir(veiculo.placa, () => {\r\n                VS.del(veiculo);\r\n                tableParams();\r\n                getVeiculos();\r\n            });\r\n        }\r\n        function marqueAllChecks() {\r\n            vm.lista.forEach(item => {\r\n                if (vm.allChecks) {\r\n                    item.linhaAtiva = true;\r\n                } else {\r\n                    item.linhaAtiva = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        function ativaLinha(linha) {\r\n            linha.linhaAtiva = !linha.linhaAtiva;\r\n            vm.allChecks = false;\r\n        }\r\n\r\n        function tableParams() {\r\n            let config = {\r\n                initialParams: {\r\n                    count: 5\r\n                },\r\n                initialSettings: {\r\n                    counts: [],\r\n                    paginationMaxBlocks: 13,\r\n                    paginationMinBlocks: 2,\r\n                    dataset: []\r\n                }\r\n            }\r\n            return new NgTableParams(config.initialParams, config.initialSettings);\r\n        }\r\n\r\n        function abrirModal() {\r\n            vm.titleModal = \"Incluir\";\r\n            vm.listaModelos = [];\r\n            vm.Model = VeiculosModel.model();\r\n            $(\"#veiculosModal\").modal(\"show\");\r\n        }\r\n\r\n        function selecionaModelos() {\r\n            vm.listaModelos = [];\r\n            if (vm.Model.marca) {\r\n                vm.listaModelos = MS.getModelos(vm.Model.marca);\r\n            }\r\n        }\r\n\r\n        function editar(id: number) {\r\n            let veiculo = Util.searchItemId(vm.lista, id);\r\n            vm.Model = veiculo;\r\n            vm.titleModal = \"Editar\";\r\n            selecionaModelos();\r\n            $(\"#veiculosModal\").modal(\"show\");\r\n        }\r\n\r\n        function salvar(isValid) {\r\n            if (!isValid) return;\r\n\r\n            if (vm.Model.hasOwnProperty(\"id\")) {\r\n                VS.atualizar(vm.Model);\r\n            } else {\r\n                VS.save(vm.Model);\r\n            }\r\n        }\r\n\r\n        function validaPlaca() {\r\n            var data = vm.Model.placa.toLowerCase(),\r\n                patterns = {\r\n                    texto: /[a-z]{1,3}/,\r\n                    numero: /[0-9]{1,4}/,\r\n                    placa: /[a-z]{3}-[0-9]{4}/\r\n                };\r\n            if (patterns.placa.test(data)) {\r\n                return vm.Model.placa = data.toUpperCase();\r\n            } else if (patterns.texto.test(data)) {\r\n                return vm.Model.placa = data.toUpperCase();\r\n            } else {\r\n                vm.Model.placa = \"\";\r\n            }\r\n        }\r\n\r\n        function getVeiculos() {\r\n            VS.getAll().then((veiculos) => {\r\n                vm.lista = veiculos;\r\n                vm.lista.forEach(item => {\r\n                    item.valorCorrigido = \"R$ \" + (+item.valor).toLocaleString() + \",00\";\r\n                    item.nomeImagem = Util.getNomeImagemLink(item.imagem);\r\n                    item.linhaAtiva = false;\r\n                });\r\n                vm.tableView.settings({\r\n                    dataset: vm.lista\r\n                });\r\n            });\r\n        }\r\n\r\n        function init() {\r\n\r\n            getVeiculos();\r\n\r\n            MS.getMarcas().then((result) => {\r\n                vm.listaMarcas = result;\r\n            });\r\n\r\n            $(document).on('click', '[data-toggle=\"lightbox\"]', function (event) {\r\n                event.preventDefault();\r\n                $(this).ekkoLightbox();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .controller(\"VeiculosController\", VeiculosController);\r\n}","namespace APPCA {\r\n\r\n    MsgInfos.$inject = [];\r\n    function MsgInfos() {\r\n        var box = $(\"main\");\r\n\r\n        return {\r\n            success: _success,\r\n            info: _info,\r\n            warning: _warning,\r\n            danger: _danger\r\n        }\r\n\r\n        function _geraEl(tipo, ico, msg) {\r\n            return '<li><p class=\"alert alert-' + tipo + ' alert-dismissible\">' +\r\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>' +\r\n                '<span class=\"glyphicon glyphicon-' + ico + '\"></span> <strong>' + msg + '</strong>' +\r\n                '</p></li>';\r\n        };\r\n\r\n        function _boxMsg() {\r\n            return \"<div class='alertSystem'><ul class='list-alert'></ul></div>\";\r\n        }\r\n\r\n        function _success(msgInput) {\r\n            _disparaAlert(_geraEl(\"success\", \"ok-sign\", _checkMsg(msgInput)));\r\n        };\r\n\r\n        function _info(msgInput) {\r\n            _disparaAlert(_geraEl(\"info\", \"info-sign\", _checkMsg(msgInput)));\r\n        };\r\n\r\n        function _warning(msgInput) {\r\n            _disparaAlert(_geraEl(\"warning\", \"alert\", _checkMsg(msgInput)));\r\n        };\r\n\r\n        function _danger(msgInput) {\r\n            _disparaAlert(_geraEl(\"danger\", \"remove-sign\", _checkMsg(msgInput)));\r\n        };\r\n\r\n        function _disparaAlert(obj) {\r\n            _removerAfterTime(_addAlert(obj));\r\n        };\r\n\r\n        function _checkMsg(msg) {\r\n            if (typeof msg === \"string\") {\r\n                if (msg.match(/^\\[.*\\]$/) !== null) {\r\n                    return _isStringArray(msg);\r\n                } else if (msg.match(/^\\{.*\\}$/) !== null) {\r\n                    return _isStringObjeto(msg);\r\n                }\r\n            } else {\r\n                if (angular.isArray(msg)) {\r\n                    return msg.join(\"<br>\");\r\n                } else if (angular.isObject(msg)) {\r\n                    return _isStringObjeto(JSON.stringify(msg));\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n        function _isStringArray(msg) {\r\n            var arr = JSON.parse(msg);\r\n            return arr.join(\"<br>\");\r\n        };\r\n\r\n        function _isStringObjeto(msg) {\r\n            var arrayString = msg.replace(/^\\{(.*)\\}$/, \"$1\").split(',');\r\n            return arrayString.join(\"<br>\");\r\n        };\r\n\r\n        function _hasAlert() {\r\n            return box.find(\".alertSystem\").is(\":visible\");\r\n        };\r\n\r\n        function _addAlert(obj) {\r\n            var $tpl = $(obj).attr(\"id\", Date.now()).hide();\r\n            if (!_hasAlert()) {\r\n                box.prepend(_boxMsg());\r\n            }\r\n\r\n            return box\r\n                .find(\".alertSystem .list-alert\")\r\n                .append($tpl)\r\n                .find(\"li\")\r\n                .last()\r\n                .fadeIn();\r\n        };\r\n\r\n        function _removerAfterTime(obj) {\r\n            var id = obj.attr(\"id\");\r\n            var temporizer = setTimeout(function () {\r\n                var alert = box.find(\".alertSystem\").find(\"#\" + id);\r\n                alert.fadeOut(\"slow\", function () {\r\n                    $(this).remove();\r\n                    clearTimeout(temporizer);\r\n                    removeAlertBox();\r\n                });\r\n            }, 6000)\r\n        };\r\n\r\n        function removeAlertBox() {\r\n            if (!box.find(\".alertSystem\").find(\"li\").length) {\r\n                box.find(\".alertSystem\").empty().remove();\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"MsgInfos\", MsgInfos);\r\n}","namespace APPCA {\r\n    function UtilHelpers() {\r\n\r\n        return {\r\n            searchItemId: searchItemId,\r\n            getNomeImagemLink: getNomeImagemLink,\r\n            excluir: excluir\r\n        };\r\n\r\n        function searchItemId(lista: Array<any>, idItem: number) {\r\n            lista.sort((a, b) => {\r\n                return a.id > b.id;\r\n            });\r\n\r\n            let listaTamanho = lista.length,\r\n                meioLista = Math.round(listaTamanho / 2),\r\n                posiStart = idItem <= meioLista ? 0 : meioLista;\r\n\r\n            for (let i = posiStart; i < idItem; i++) {\r\n                if (lista[i].id === idItem) {\r\n                    return lista[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function getNomeImagemLink(link) {\r\n            if (!link) return;\r\n\r\n            var linkSplit = link.split(\"/\");\r\n            var nome = linkSplit[linkSplit.length - 1];\r\n\r\n            nome = nome.replace(/\\.[a-z]{3,4}$/, '');\r\n            nome = nome.replace(/(_|\\.)/g, ' ');\r\n\r\n            return nome.substring(0, 25);\r\n        }\r\n\r\n        function excluir(registro, callbackSim, callbackNao, title, msg) {\r\n            if (!callbackSim) return;\r\n\r\n            BootstrapDialog.show({\r\n                type: BootstrapDialog.TYPE_DANGER,\r\n                size: BootstrapDialog.SIZE_SMALL,\r\n                title: title || \"Excluir Registro\",\r\n                message: msg || `Deseja realmente excluir o registro: <br><strong>${registro}</strong>?`,\r\n                buttons: [\r\n                    {\r\n                        label: 'Não',\r\n                        cssClass: 'btn-default',\r\n                        action: function (dialog) {\r\n                            dialog.close();\r\n                            if (callbackNao) {\r\n                                callbackNao();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Sim',\r\n                        cssClass: 'btn-danger',\r\n                        action: function (dialog) {\r\n                            dialog.close();\r\n                            callbackSim();\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"UtilHelpers\", UtilHelpers);\r\n}","namespace APPCA {\r\n    function VeiculosModel(): IVeiculos {\r\n        let Model = {\r\n            combustivel: \"\",\r\n            imagem: \"\",\r\n            marca: \"\",\r\n            modelo: \"\",\r\n            placa: \"\",\r\n            valor: 0\r\n        };\r\n\r\n        function getModel() {\r\n            return Model;\r\n        }\r\n\r\n        return {\r\n            model: getModel\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .factory(\"VeiculosModel\", VeiculosModel);\r\n}","namespace APPCA {\r\n    MarcasService.$inject = [\"$http\", \"$q\"];\r\n    function MarcasService($http, $q) {\r\n        let listaMarcas = [],\r\n            listaModelos = {},\r\n            def = $q.defer();\r\n\r\n        $http.get(\"data/marcas-veiculos.json\").then((result) => {\r\n            let res = angular.fromJson(result.data);\r\n            listaMarcas = res.Marcas;\r\n            listaModelos = res.Modelos;\r\n            def.resolve(listaMarcas);\r\n        });\r\n\r\n\r\n        return {\r\n            getMarcas: _getMarcas,\r\n            getModelos: _getModelos\r\n        }\r\n\r\n        function _getMarcas() {\r\n            return def.promise;\r\n        }\r\n\r\n        function _getModelos(modelo: string): Array<string> {\r\n            return listaModelos[modelo];\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"MarcasService\", MarcasService);\r\n}","namespace APPCA {\r\n    VeiculosService.$inject = [\"$http\", \"$q\", \"MsgInfos\"];\r\n    function VeiculosService($http, $q, MsgInfos) {\r\n        let lista = [];\r\n        return {\r\n            getAll: _getAll,\r\n            getOne: _getOne,\r\n            save: _save,\r\n            arualizar: _atualiza,\r\n            del: _delete\r\n        }\r\n\r\n        function _getAll() {\r\n            let def = $q.defer();\r\n            if (!lista.length) {\r\n                $http.get(\"data/conta-azul-dados.json\").then((result) => {\r\n                    lista = angular.fromJson(result.data.Veiculos);\r\n                    def.resolve(lista);\r\n                });\r\n            } else {\r\n                def.resolve(lista);\r\n            }\r\n            return def.promise;\r\n        }\r\n\r\n        function _getOne(index) {\r\n            return lista[index];\r\n        }\r\n\r\n        function _atualiza(obj) {\r\n            let posiIntem = lista.indexOf(obj)\r\n            lista[posiIntem] = obj;\r\n            MsgInfos.success(\"Veículo atualizado com sucesso!\");\r\n        }\r\n        function _save(obj) {\r\n            lista.push(obj);\r\n            MsgInfos.success(\"Veículo cadastrado com sucesso!\");\r\n        }\r\n\r\n        function _delete(veiculo) {\r\n            let item = lista.indexOf(veiculo);\r\n            if (item >= 0) {\r\n                lista.splice(item, 1);\r\n                MsgInfos.success(\"Veículo excluido com sucesso!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"AppContaAzul\")\r\n        .service(\"VeiculosService\", VeiculosService);\r\n}"]}